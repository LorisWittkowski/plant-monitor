import { kv } from "@vercel/kv";
export default async function handler(req,res){
if(req.method!=='POST'){ res.setHeader('Allow',['POST']); return res.status(405).end('Method Not Allowed'); }
try{ const { sensorId, rawDry, rawWet, reset, name, token } = req.body || {}; if(!sensorId) return res.status(400).json({ error:'sensorId required' }); if(process.env.INGEST_TOKEN && token !== process.env.INGEST_TOKEN) return res.status(401).json({ error:'unauthorized' }); await kv.sadd('soil:sensors', sensorId); if(reset){ await kv.del(`soil:${sensorId}:config`); return res.json({ ok:true, reset:true }); } const prev = await kv.get(`soil:${sensorId}:config`) || {}; const cfg = { rawDry: (rawDry ?? prev.rawDry ?? null), rawWet: (rawWet ?? prev.rawWet ?? null), name: (name ?? prev.name ?? null), updatedAt: new Date().toISOString() }; await kv.set(`soil:${sensorId}:config`, cfg); return res.json({ ok:true, config: cfg }); }catch(e){ return res.status(500).json({ error:'server error' }); }
}